##############################################################
# Global Kakoune settings
##############################################################
eval %sh{ kak-tree-sitter -dks --session $kak_session }

colorscheme custom

map global normal '#' :comment-line<ret> -docstring 'comment line'
map global normal '<a-#>' :comment-block<ret> -docstring 'comment block'

# highlight trailing whitespace
set-face global TrailingWhitespace default,bright-magenta
add-highlighter global/ regex '[ \h]+$' 0:TrailingWhitespace

# highlight special comment words
add-highlighter global/ regex \b(TODO|FIXME|XXX|NOTE)\b 0:yellow,black 1:black,yellow

set-option global indentwidth 4
set-option global tabstop 4

#############################################################
# Hook settings
##############################################################
hook global WinCreate ^[^*]+$ %{
    add-highlighter window/             number-lines -relative -hlcursor
    add-highlighter window/             show-matching


    add-highlighter global/delimeter regex '(\(|\)|\[|\]|\{|\}|;|,)' 0:delimiter
    add-highlighter window/operators regex '(\+|-|\*|&|=|\?|%|\|!|\||->|\.|<|>|:|^|/|~)' 0:operator
}

define-command wrap -docstring "Wrap text output at 80 columns" %{
    add-highlighter window/ wrap -width 80
}

# map jk to <esc>
# update colorscheme for normal mode
hook global InsertChar k %{ try %{
    exec -draft hH <a-k>jk<ret> d
    exec <esc>
    set-face window Default "%opt{foreground},rgb:112630"
    set-face window LineNumbers "%opt{grey4},rgb:112630"
    set-face window BufferPadding "rgb:112630,rgb:112630"
}}

# update colorscheme for insert mode
hook global ModeChange push:[^:]*:insert %{
    set-face window Default "%opt{foreground},rgb:011627"
    set-face window LineNumbers "%opt{grey4},rgb:011627"
    set-face global BufferPadding "rgb:011627,rgb:011627"
}

# sets tabs to 8 spaces for go
hook global WinSetOption filetype=go %{
    set-option window indentwidth 8
    set-option window tabstop 8
}

# sets tabs to 2 spaces for certain file types
hook global WinSetOption filetype=(javascript|typescript|markdown|json|scss) %{
    set-option window formatcmd "prettier %val{buffile} --write"
    set-option window indentwidth 2
    set-option window tabstop 2
}

hook global WinSetOption filetype=(javascript|typescript|json) %{
    set-option global kak_log_log_fn 'console.log'
    set-option global kak_log_execute_command 'node'

    set global lintcmd '/Users/fme2202/projects/global-eslint/node_modules/.bin/eslint --config=/Users/fme2202/projects/global-eslint/.eslintrc.js --format=/Users/fme2202/projects/global-eslint/node_modules/eslint-formatter-kakoune'

    eval 'lint-buffer'

    hook buffer BufWritePost .* %{
        lint
    }

}

hook global WinSetOption filetype=python %{
    set global lintcmd "flake8 --filename='*' --format='%%(path)s:%%(row)d:%%(col)d: error: %%(text)s' --ignore=E121,E123,E126,E226,E242,E704,W503,W504,E501,E221,E127,E128,E129,F405"

    eval 'lint-buffer'

    hook buffer BufWritePost .* %{
        lint
    }
}

hook global WinSetOption filetype=sh %{
    set-option window lintcmd "shellcheck -fgcc -Cnever"

    eval 'lint-buffer'

    hook buffer BufWritePost .* %{
        lint
    }
}

hook global WinSetOption filetype=json %{
    set-option window lintcmd %{ run() { cat -- "$1" | jq 2>&1 | awk -v filename="$1" '/ at line [0-9]+, column [0-9]+$/ { line=$(NF - 2); column=$NF; sub(/ at line [0-9]+, column [0-9]+$/, ""); printf "%s:%d:%d: error: %s", filename, line, column, $0; }'; } && run }

    eval 'lint-buffer'

    hook buffer BufWritePost .* %{
        lint
    }
}

# open fzf-file if kak is opened without a file argument
hook -once global WinDisplay \*scratch\* %{
    require-module fzf
    require-module fzf-file
    execute-keys '<esc>: fzf-file<ret>'
}

#############################################################
# Switch to alternate file (e.g. from Foo.js -> Foo.test.js)
# rip off of https://github.com/chriswalker/golang.kak/blob/master/rc/golang.kak
#############################################################
hook global WinSetOption filetype=javascript %{
    define-command js-alternate -docstring "Switch to alternate JS file" %{
        evaluate-commands %sh{
            case $kak_bufname in
                *.test.js)
                    altfile=${kak_bufname%.test.js}.js
                ;;
                *.js)
                    altfile=${kak_bufname%.js}.test.js
                ;;
            esac
            test ! -f $altfile && echo "fail '$altfile not found'" && exit
               printf "%s\n" "edit ${altfile}"
        }
    }
}

#############################################################
# Plug settings
#############################################################

# set up plugin manager
source "%val{config}/plugins/plug.kak/rc/plug.kak"

plug "https://gitlab.com/FlyingWombat/case.kak"
map global normal '`' ': enter-user-mode<space>case<ret>'

plug "chriswalker/golang.kak"

plug "h-youhei/kakoune-surround" config %{
    declare-user-mode surround
    map global surround s ':surround<ret>' -docstring 'surround'
    map global surround c ':change-surround<ret>' -docstring 'change'
    map global surround d ':delete-surround<ret>' -docstring 'delete'
    map global surround t ':select-surrounding-tag<ret>' -docstring 'select tag'
    map global user < ':enter-user-mode<space>surround<ret>' -docstring 'surround mode'
}

plug 'jordan-yee/kakoune-git-mode' config %{
    declare-git-mode

    map global user v ': enter-user-mode git<ret>' -docstring "git mode"
}

plug 'cameron-yee/kak-log' config %{
    declare-user-mode log

    map global log l ':kak-log<ret>' -docstring 'add log statement for the current selection'
    map global log e ':kak-execute-file<ret>' -docstring 'run command and output stdout to a new buffer'
    map global user d ':enter-user-mode<space>log<ret>' -docstring 'log'
}

############################################################
# tabs to spaces
# Will insert tabstop amount of spaces
# used with following hook
#############################################################
plug "andreyorst/smarttab.kak" defer smarttab %{
    set-option global softtabstop 4
} config %{
    hook global WinSetOption filetype=(markdown|javascript|typescript|python|css) %{
        expandtab
    }
    hook global WinSetOption filetype=(makefile|go) %{
        noexpandtab
    }
}

#############################################################
# FZF settings
#############################################################
plug "andreyorst/fzf.kak" config %{
    map global normal <c-p> ': fzf-mode<ret>'
} defer "fzf-file" %{
    # set global fzf_file_command 'rg'
    set global fzf_file_command 'fd --hidden --type f --exclude .git --exclude node_modules'
    set global fzf_highlight_command 'bat'

    define-command dbf -docstring 'delete buffer and open fzf-file' %{
        execute-keys ': delete-buffer<ret>'
        execute-keys '<esc>: fzf-file<ret>'
    }

    define-command wf -docstring 'write buffer and close and open fzf-file' %{
        execute-keys ': write<ret>'
        execute-keys ': delete-buffer<ret>'
        execute-keys '<esc>: fzf-file<ret>'
    }
} defer "fzf-grep" %{
    set global fzf_grep_command 'rg'
}

#############################################################
# LSP settings
#############################################################
plug "kak-lsp/kak-lsp" do %{
    cargo install --locked --force --path .
} config %{
    hook global WinSetOption filetype=(javascript|typescript|go|python|css|scss|html|json|yaml) %{
        map window user "l" ": enter-user-mode lsp<ret>" -docstring "LSP mode"

        lsp-enable-window
        lsp-auto-hover-enable

        set-option window lsp_hover_anchor false
        set-option window lsp_hover_max_lines 10

        set-face window DiagnosticError red,default+i
        set-face window DiagnosticHint yellow,default+i
        set-face window DiagnosticWarning default+u

        echo -debug "Enabling LSP for filetype %opt{filetype}"
    }

    #############################################################
    # Add the following flag for debugging
    # --log ~/.config/kak-lsp/kak-lsp.log
    #############################################################
    set-option global lsp_cmd "kak-lsp -vvv -c ~/.config/kak-lsp/kak-lsp.toml -s %val{session}"

    # for python. Can't configure python in kak-lsp.toml.
    set-option global lsp_server_configuration pyls.configurationSources=["flake8"]

    hook global KakEnd .* lsp-exit
}

plug "krornus/kakoune-toggle-map" %{
    plug "krornus/kakoune-hlsearch" %{
        toggle-map global normal <c-t> hlsearch-on hlsearch-off
    }
}

#############################################################
# User modes
#############################################################
declare-user-mode sort
map global sort s '|sort<ret>' -docstring 'sort'
map global sort u '|sort<space>|<space>uniq<ret>' -docstring 'sort and remove duplicates'
map global user s ':enter-user-mode<space>sort<ret>' -docstring 'sort mode'

declare-user-mode golang
map global golang a ':go-alternate<ret>' -docstring 'go-alternate'
map global golang c ':go-coverage<ret>' -docstring 'go-coverage'
map global golang f ':go-format<ret>' -docstring 'go-format'
map global golang t ':go-test<ret>' -docstring 'go-test'
map global golang i ':gopls imports<ret>' -docstring 'update imports'
map global golang r ':go-coverage<ret>:go-coverage<ret>' -docstring 'refresh go-coverage'
map global user g ':enter-user-mode<space>golang<ret>' -docstring 'golang mode'

declare-user-mode javascript
map global javascript a ':js-alternate<ret>' -docstring 'js-alternate'
map global user j ':enter-user-mode<space>javascript<ret>' -docstring 'javascript mode'

declare-user-mode lint
map global lint b ':buffer<space>*lint-output*<ret>' -docstring 'open *lint-output* buffer'
map global lint l ':lint<ret>' -docstring 'lint'
map global lint n ':lint-next-message<ret>' -docstring 'lint-next-message'
map global lint p ':lint-previous-message<ret>' -docstring 'lint-previous-message'
map global lint e ':enter-user-mode<space>-lock<space>lint<ret>' -docstring 'lock lint mode'
map global user e ':enter-user-mode<space>lint<ret>' -docstring 'lint mode'
